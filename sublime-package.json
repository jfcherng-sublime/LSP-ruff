{
  "contributions": {
    "settings": [
      {
        "file_patterns": [
          "/LSP-ruff.sublime-settings"
        ],
        "schema": {
          "$id": "sublime://settings/LSP-ruff",
          "definitions": {
            "LspRuffSettings": {
              "additionalProperties": false,
              "properties": {
                "configuration": {
                  "default": null,
                  "markdownDescription": "Configuration overrides for Ruff. See [the documentation](https://docs.astral.sh/ruff/editors/settings/#configuration) for more details.",
                  "oneOf": [
                    {
                      "type": "string",
                      "markdownDescription": "Path to a `ruff.toml` or `pyproject.toml` file to use for configuration.",
                      "examples": [
                        "~/.ruff.toml"
                      ]
                    },
                    {
                      "type": "object",
                      "markdownDescription": "Inline JSON configuration for Ruff settings (e.g., `{ \"line-length\": 100 }`). *Added in Ruff 0.9.8.*",
                      "examples": [
                        {
                          "lint": {
                            "unfixable": [
                              "F401"
                            ]
                          },
                        }
                      ]
                    },
                    {
                      "type": "null",
                    }
                  ],
                },
                "configurationPreference": {
                  "type": "string",
                  "default": "editorFirst",
                  "enum": [
                    "editorFirst",
                    "filesystemFirst",
                    "editorOnly"
                  ],
                  "enumDescriptions": [
                    "Editor settings take priority over configuration files present in the workspace.",
                    "Configuration files present in the workspace takes priority over editor settings.",
                    "Ignore configuration files entirely i.e., only use editor settings."
                  ],
                  "markdownDescription": "The strategy to use when resolving settings across editor and the filesystem. By default, editor configuration is prioritized over `ruff.toml` and `pyproject.toml` files."
                },
                "exclude": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "default": null,
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of file patterns to exclude from linting and formatting. See the documentation for more details."
                },
                "format.preview": {
                  "type": [
                    "null",
                    "boolean"
                  ],
                  "default": null,
                  "description": "Whether to enable Ruff's preview mode when formatting."
                },
                "lint.enable": {
                  "type": "boolean",
                  "default": true,
                  "markdownDescription": "Whether to enable linting. Set to false to use Ruff exclusively as a formatter."
                },
                "lineLength": {
                  "type": [
                    "null",
                    "integer"
                  ],
                  "default": null,
                  "description": "The line length to use for the linter and formatter."
                },
                "lint.select": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "default": null,
                  "items": {
                    "type": "string"
                  },
                  "description": "Rules to enable by default. See the documentation."
                },
                "lint.extendSelect": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "default": null,
                  "items": {
                    "type": "string"
                  },
                  "markdownDescription": "Rules to enable in addition to those in `lint.select`."
                },
                "lint.ignore": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "default": null,
                  "items": {
                    "type": "string"
                  },
                  "description": "Rules to disable by default. See the documentation."
                },
                "lint.preview": {
                  "type": [
                    "null",
                    "boolean"
                  ],
                  "default": null,
                  "description": "Whether to enable Ruff's preview mode when linting."
                },
                "logLevel": {
                  "type": "string",
                  "default": "error",
                  "enum": [
                    "error",
                    "warn",
                    "info",
                    "debug",
                    "off"
                  ],
                  "description": "Sets the tracing level for the extension."
                },
                "showNotification": {
                  "type": "string",
                  "default": "off",
                  "description": "Setting to control when a notification is shown.",
                  "deprecationMessage": "This option only works in VS Code."
                },
                "organizeImports": {
                  "type": "boolean",
                  "default": true,
                  "markdownDescription": "Whether to register Ruff as capable of handling `source.organizeImports` actions."
                },
                "fixAll": {
                  "type": "boolean",
                  "default": true,
                  "markdownDescription": "Whether to register Ruff as capable of handling `source.fixAll` actions."
                },
                "codeAction.fixViolation.enable": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to display Quick Fix actions to autofix violations."
                },
                "codeAction.disableRuleComment.enable": {
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to display Quick Fix actions to disable rules via noqa suppression comments."
                }
              },
            },
            "PluginConfig": {
              "properties": {
                "initializationOptions": {
                  "properties": {
                    "settings": {
                      "$ref": "sublime://settings/LSP-ruff#/definitions/LspRuffSettings",
                    }
                  }
                }
              }
            }
          },
          "allOf": [
            {
              "$ref": "sublime://settings/LSP-plugin-base"
            },
            {
              "$ref": "sublime://settings/LSP-ruff#/definitions/PluginConfig"
            }
          ]
        }
      },
      {
        "file_patterns": [
          "/*.sublime-project"
        ],
        "schema": {
          "properties": {
            "settings": {
              "properties": {
                "LSP": {
                  "properties": {
                    "LSP-ruff": {
                      "$ref": "sublime://settings/LSP-ruff#/definitions/PluginConfig"
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "file_patterns": [
          "LSP.sublime-settings"
        ],
        "schema": {
          "properties": {
            "lsp_code_actions_on_save": {
              "properties": {
                "source.fixAll.ruff": {
                  "type": "boolean"
                },
                "source.organizeImports.ruff": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    ]
  }
}
